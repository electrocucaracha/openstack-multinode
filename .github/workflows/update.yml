---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2021 - 2023
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
name: Scheduled Versions and Dictionary verification
# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
permissions: read-all
jobs:
  check-versions:
    name: Update python requirements files
    permissions:
      contents: write # for technote-space/create-pr-action to push code
      pull-requests: write # for technote-space/create-pr-action to create a PR
    strategy:
      max-parallel: 1
      fail-fast: false
      # NOTE: https://docs.openstack.org/kolla-ansible/latest/user/support-matrix
      matrix:
        image:
          [
            "docker.io/library/debian:12",
            "docker.io/library/ubuntu:22.04",
            "docker.io/library/rockylinux:9",
          ]
        os_release: ["2023.2", "2024.1", "2024.2"]
        include:
          - image: "docker.io/library/debian:11"
            os_release: "2023.2"
          - image: "docker.io/library/debian:11"
            os_release: "2024.1"
          - image: "docker.io/library/debian:12"
            os_release: "2025.1"
          - image: "docker.io/library/rockylinux:9"
            os_release: "2025.1"
          - image: "docker.io/library/ubuntu:24.04"
            os_release: "2025.1"
    container:
      image: ${{ matrix.image }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # 6.5.0
        with:
          enable-cache: true
      - name: install dependencies
        shell: bash
        run: |
          if ! command -v git; then
              source /etc/os-release || source /usr/lib/os-release
              case ${ID,,} in
                  ubuntu|debian)
                      apt update
                      INSTALLER_CMD="apt-get -y --no-install-recommends -q=3 install"
                  ;;
                  rhel|centos|fedora|rocky)
                      INSTALLER_CMD="$(command -v dnf || command -v yum) -y --quiet --errorlevel=0 install"
                  ;;
              esac
              $INSTALLER_CMD git
          fi
      - uses: technote-space/create-pr-action@91114507cf92349bec0a9a501c2edf1635427bc5 # 2.1.4
        with:
          EXECUTE_COMMANDS: |
            bash -c 'source /etc/os-release; uv pip compile --output-file="${GITHUB_WORKSPACE}/requirements/${{ matrix.os_release }}/${ID,,}_${VERSION_ID%.*}.txt" "${GITHUB_WORKSPACE}/requirements/${{ matrix.os_release }}/pyproject.toml" --upgrade'
          COMMIT_MESSAGE: "Upgrade OpenStack Kolla dependencies"
          COMMIT_NAME: "electrocucaracha bot"
          PR_BRANCH_NAME: "versions-update-${PR_ID}"
          PR_TITLE: "chore: update versions"
  check-dictionary:
    runs-on: ubuntu-latest
    permissions:
      contents: write # for technote-space/create-pr-action to push code
      pull-requests: write # for technote-space/create-pr-action to create a PR
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - uses: technote-space/create-pr-action@91114507cf92349bec0a9a501c2edf1635427bc5 # 2.1.4
        with:
          EXECUTE_COMMANDS: |
            sudo apt-get update
            sudo apt-get -y --no-install-recommends install aspell aspell-en
            python -m pip install pyspelling

            sort --ignore-case --output=original.dic .github/.wordlist.txt
            echo "" > .github/.wordlist.txt
            # Remove leftovers
            pyspelling -c .spellcheck.yml | sed '/^<.*>/d;/^!!!/d;/^--/d;/^Misspelled words:/d;/^$/d;/^Spelling check passed :)$/d' | sort --ignore-case | uniq --ignore-case | tee draft.dic
            comm -12 --nocheck-order draft.dic original.dic > .github/.wordlist.txt
            sort --ignore-case --output=.github/.wordlist.txt .github/.wordlist.txt

            # Add missing words
            pyspelling -c .spellcheck.yml | sed '/^<.*>/d;/^!!!/d;/^--/d;/^Misspelled words:/d;/^$/d;/^Spelling check passed :)$/d' | sort --ignore-case | uniq --ignore-case | tee --append .github/.wordlist.txt
            sort --ignore-case --output=.github/.wordlist.txt .github/.wordlist.txt
          COMMIT_MESSAGE: "Update dictionary definitions"
          COMMIT_NAME: "spellchecker bot"
          PR_BRANCH_NAME: "versions-update-${PR_ID}"
          PR_TITLE: "chore: update dictionary"
  check-github-actions:
    runs-on: ubuntu-latest
    permissions:
      contents: write # for technote-space/create-pr-action to push code
      pull-requests: write # for technote-space/create-pr-action to create a PR
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
        with:
          # Fine-grained PAT with contents:write and workflows:write scopes
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - uses: technote-space/create-pr-action@91114507cf92349bec0a9a501c2edf1635427bc5 # 2.1.4
        with:
          EXECUTE_COMMANDS: |
            ./ci/update_versions.sh
          COMMIT_MESSAGE: "Update GitHub Actions"
          COMMIT_NAME: "gh versions bot"
          PR_BRANCH_NAME: "gh-versions-update-${PR_ID}"
          PR_TITLE: "chore: update gh"
