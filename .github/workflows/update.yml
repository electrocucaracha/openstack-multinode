---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2021
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

name: Scheduled Versions and Dictionary verification
# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-versions:
    name: Update python requirements files
    permissions:
      contents: write  # for technote-space/create-pr-action to push code
      pull-requests: write  # for technote-space/create-pr-action to create a PR
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        image: ["quay.io/centos/centos:stream8", "docker.io/library/debian:11", "docker.io/library/ubuntu:20.04", "docker.io/library/rockylinux:9"]
    container:
      image: ${{ matrix.image }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.1
      - name: install dependencies
        shell: bash
        run: |
          source /etc/os-release || source /usr/lib/os-release
          case ${ID,,} in
              ubuntu|debian)
                  apt update
                  INSTALLER_CMD="apt-get -y --no-install-recommends -q=3 install"
              ;;
              rhel|centos|fedora|rocky)
                  INSTALLER_CMD="$(command -v dnf || command -v yum) -y --quiet --errorlevel=0 install"
              ;;
          esac
          $INSTALLER_CMD python3-pip git
          pip3 install pip-tools
      - uses: technote-space/create-pr-action@v2.1.4
        with:
          EXECUTE_COMMANDS: |
            bash -c 'source /etc/os-release; for requirements in $(find requirements/ -name ${ID,,}.in); do pip-compile --output-file="$(dirname $requirements)/${ID,,}.txt" "$requirements" --upgrade; done'
          COMMIT_MESSAGE: 'Upgrade OpenStack Kolla dependencies'
          COMMIT_NAME: 'electrocucaracha bot'
          PR_BRANCH_NAME: "versions-update-${PR_ID}"
          PR_TITLE: 'chore: update versions'
  check-dictionary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.1
      - uses: technote-space/create-pr-action@v2.1.4
        with:
          EXECUTE_COMMANDS: |
            sudo apt-get update
            sudo apt-get -y --no-install-recommends install aspell aspell-en
            pip install pyspelling

            sort --ignore-case --output=original.dic .github/.wordlist.txt
            echo "" > .github/.wordlist.txt
            # Remove leftovers
            pyspelling -c .spellcheck.yml | sed '/^<.*>/d;/^!!!/d;/^--/d;/^Misspelled words:/d;/^$/d;/^Spelling check passed :)$/d' | sort --ignore-case | uniq --ignore-case | tee draft.dic
            comm -12 --nocheck-order draft.dic original.dic > .github/.wordlist.txt
            sort --ignore-case --output=.github/.wordlist.txt .github/.wordlist.txt

            # Add missing words
            pyspelling -c .spellcheck.yml | sed '/^<.*>/d;/^!!!/d;/^--/d;/^Misspelled words:/d;/^$/d;/^Spelling check passed :)$/d' | sort --ignore-case | uniq --ignore-case | tee --append .github/.wordlist.txt
            sort --ignore-case --output=.github/.wordlist.txt .github/.wordlist.txt
          COMMIT_MESSAGE: 'Update dictionary definitions'
          COMMIT_NAME: 'spellchecker bot'
          PR_BRANCH_NAME: "versions-update-${PR_ID}"
          PR_TITLE: 'chore: update dictionary'
